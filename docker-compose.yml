services:
  cassandra:
    image: cassandra:4.1
    container_name: rtinv-cassandra
    ports:
      - "9042:9042"
    environment:
      # keep Cassandra light so it boots on a laptop
      - JVM_OPTS=-Xms512M -Xmx1024M
      - CASSANDRA_CLUSTER_NAME=rtinv
      - CASSANDRA_NUM_TOKENS=128
      - CASSANDRA_START_RPC=true
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    healthcheck:
      test: ["CMD", "bash", "-lc", "cqlsh 127.0.0.1 9042 -e 'DESCRIBE KEYSPACES'"]
      interval: 15s
      timeout: 10s
      retries: 40
    volumes:
      # just stores data; schema will be applied by cql-init (next service)
      - cass_data:/var/lib/cassandra

  # Apply schema *after* Cassandra is healthy.
  cql-init:
    image: cassandra:4.1
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./infra/cassandra/init:/init
    entrypoint: [ "bash", "-lc",
      "cqlsh cassandra 9042 -e \"SOURCE '/init/001-schema.cql'\" && echo 'Schema applied'"
    ]

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: rtinv-zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    container_name: rtinv-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-init:
    image: bitnami/kafka:3.7
    depends_on:
      kafka:
        condition: service_started
    entrypoint: ["/bin/bash","-c"]
    command: >
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists
      --topic inventory_price_events --bootstrap-server kafka:9092
      --replication-factor 1 --partitions 3

volumes:
  cass_data:
